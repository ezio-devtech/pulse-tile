// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component <App /> should renders correctly with is not touch device 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="page"
>
    <Connect(LoadingBar)
        className="loading-bar"
    />
    <MainSpinner />
    <div
        className="wrapper is-not-touch-device"
    >
        <header
            className="header"
        >
            <Connect(Connect(TopHeader)) />
            <Header />
        </header>
        <withRouter(Connect(Connect(Connect(Main)))) />
    </div>
    <Footer />
</div>,
  "nodes": Array [
    <div
      className="page"
>
      <Connect(LoadingBar)
            className="loading-bar"
      />
      <MainSpinner />
      <div
            className="wrapper is-not-touch-device"
      >
            <header
                  className="header"
            >
                  <Connect(Connect(TopHeader)) />
                  <Header />
            </header>
            <withRouter(Connect(Connect(Connect(Main)))) />
      </div>
      <Footer />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <App
        dispatch={[Function]}
        store={
                Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      }
        }
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "dispatch": [Function],
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="page"
>
          <Connect(LoadingBar)
                    className="loading-bar"
          />
          <MainSpinner />
          <div
                    className="wrapper is-not-touch-device"
          >
                    <header
                              className="header"
                    >
                              <Connect(Connect(TopHeader)) />
                              <Header />
                    </header>
                    <withRouter(Connect(Connect(Connect(Main)))) />
          </div>
          <Footer />
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="page"
>
          <Connect(LoadingBar)
                    className="loading-bar"
          />
          <MainSpinner />
          <div
                    className="wrapper is-not-touch-device"
          >
                    <header
                              className="header"
                    >
                              <Connect(Connect(TopHeader)) />
                              <Header />
                    </header>
                    <withRouter(Connect(Connect(Connect(Main)))) />
          </div>
          <Footer />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <App
    dispatch={[Function]}
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
/>,
}
`;

exports[`Component <App /> should renders correctly with touch device 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="page"
>
    <Connect(LoadingBar)
        className="loading-bar"
    />
    <MainSpinner />
    <div
        className="wrapper touch-device"
    >
        <header
            className="header"
        >
            <Connect(Connect(TopHeader)) />
            <Header />
        </header>
        <withRouter(Connect(Connect(Connect(Main)))) />
    </div>
    <Footer />
</div>,
  "nodes": Array [
    <div
      className="page"
>
      <Connect(LoadingBar)
            className="loading-bar"
      />
      <MainSpinner />
      <div
            className="wrapper touch-device"
      >
            <header
                  className="header"
            >
                  <Connect(Connect(TopHeader)) />
                  <Header />
            </header>
            <withRouter(Connect(Connect(Connect(Main)))) />
      </div>
      <Footer />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <App
        dispatch={[Function]}
        isTouchDevice={true}
        store={
                Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "dispatch": [Function],
          "isTouchDevice": true,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="page"
>
          <Connect(LoadingBar)
                    className="loading-bar"
          />
          <MainSpinner />
          <div
                    className="wrapper touch-device"
          >
                    <header
                              className="header"
                    >
                              <Connect(Connect(TopHeader)) />
                              <Header />
                    </header>
                    <withRouter(Connect(Connect(Connect(Main)))) />
          </div>
          <Footer />
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="page"
>
          <Connect(LoadingBar)
                    className="loading-bar"
          />
          <MainSpinner />
          <div
                    className="wrapper touch-device"
          >
                    <header
                              className="header"
                    >
                              <Connect(Connect(TopHeader)) />
                              <Header />
                    </header>
                    <withRouter(Connect(Connect(Connect(Main)))) />
          </div>
          <Footer />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <App
    dispatch={[Function]}
    isTouchDevice={true}
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
/>,
}
`;
